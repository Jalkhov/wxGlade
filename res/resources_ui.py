# -*- coding: ISO-8859-15 -*-
#
# generated by wxGlade from "C:\Users\Jalkhov\Documents\Github\Jalkhov\wxGlade\res\resources_ui.wxg"
#

import wx

# begin wxGlade: dependencies
import gettext
# end wxGlade

# begin wxGlade: extracode
import config
import os

_icon_path = os.path.join(config.icons_path, 'icon.png')
_add_wrc = os.path.join(config.icons_path, 'new_module\\add_wrc.png')
_load_wrc = os.path.join(config.icons_path, 'new_module\\load_wrc.png')
_remove_wrc = os.path.join(config.icons_path, 'new_module\\remove_wrc.png')
_add_file = os.path.join(config.icons_path, 'new_module\\add_file.png')
_remove_file = os.path.join(config.icons_path, 'new_module\\remove_file.png')
# end wxGlade


class wxGladeResourcesUI(wx.Dialog):
    def __init__(self, *args, **kwds):
        # begin wxGlade: wxGladeResourcesUI.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_DIALOG_STYLE
        wx.Dialog.__init__(self, *args, **kwds)
        self.SetSize((484, 357))
        self.SetTitle(_("Edit resources - WxGlade"))
        _icon = wx.NullIcon
        _icon.CopyFromBitmap(wx.Bitmap(_icon_path, wx.BITMAP_TYPE_ANY))
        self.SetIcon(_icon)

        main_sizer = wx.BoxSizer(wx.VERTICAL)

        self.splitter_window = wx.SplitterWindow(self, wx.ID_ANY)
        self.splitter_window.SetMinimumPaneSize(20)
        main_sizer.Add(self.splitter_window, 1, wx.ALL | wx.EXPAND, 10)

        self.left_panel = wx.Panel(self.splitter_window, wx.ID_ANY)

        left_main_sizer = wx.BoxSizer(wx.VERTICAL)

        self.resources = wx.ListBox(self.left_panel, wx.ID_ANY, choices=[])
        left_main_sizer.Add(self.resources, 1, wx.BOTTOM | wx.EXPAND, 5)

        left_buttons_sizer = wx.BoxSizer(wx.HORIZONTAL)
        left_main_sizer.Add(left_buttons_sizer, 0, wx.ALL | wx.EXPAND, 0)

        self.add_wrc_file = wx.BitmapButton(self.left_panel, wx.ID_ANY, wx.Bitmap(_add_wrc, wx.BITMAP_TYPE_ANY))
        self.add_wrc_file.SetMinSize((30, 30))
        self.add_wrc_file.SetToolTip(_("New resources file"))
        left_buttons_sizer.Add(self.add_wrc_file, 0, wx.RIGHT, 3)

        self.load_wrc_file = wx.BitmapButton(self.left_panel, wx.ID_ANY, wx.Bitmap(_load_wrc, wx.BITMAP_TYPE_ANY))
        self.load_wrc_file.SetMinSize((30, 30))
        self.load_wrc_file.SetToolTip(_("Open resources file"))
        left_buttons_sizer.Add(self.load_wrc_file, 0, wx.RIGHT, 3)

        self.remove_wrc_file = wx.BitmapButton(self.left_panel, wx.ID_ANY, wx.Bitmap(_remove_wrc, wx.BITMAP_TYPE_ANY))
        self.remove_wrc_file.SetMinSize((30, 30))
        self.remove_wrc_file.SetToolTip(_("Remove resources file"))
        left_buttons_sizer.Add(self.remove_wrc_file, 0, 0, 0)

        self.right_panel = wx.Panel(self.splitter_window, wx.ID_ANY)

        right_main_sizer = wx.BoxSizer(wx.VERTICAL)

        self.resources_files = wx.ListBox(self.right_panel, wx.ID_ANY, choices=[])
        right_main_sizer.Add(self.resources_files, 1, wx.BOTTOM | wx.EXPAND, 5)

        right_buttons_sizer = wx.BoxSizer(wx.HORIZONTAL)
        right_main_sizer.Add(right_buttons_sizer, 0, wx.ALL | wx.EXPAND, 0)

        self.add_file = wx.BitmapButton(self.right_panel, wx.ID_ANY, wx.Bitmap(_add_file, wx.BITMAP_TYPE_ANY))
        self.add_file.SetMinSize((30, 30))
        self.add_file.SetToolTip(_("Add file"))
        right_buttons_sizer.Add(self.add_file, 0, wx.RIGHT, 3)

        self.remove_file = wx.BitmapButton(self.right_panel, wx.ID_ANY, wx.Bitmap(_remove_file, wx.BITMAP_TYPE_ANY))
        self.remove_file.SetMinSize((30, 30))
        self.remove_file.SetToolTip(_("Delete file"))
        right_buttons_sizer.Add(self.remove_file, 0, 0, 0)

        buttons_box = wx.StdDialogButtonSizer()
        main_sizer.Add(buttons_box, 0, wx.ALIGN_RIGHT | wx.ALL, 4)

        self.button_ok = wx.Button(self, wx.ID_OK, "")
        self.button_ok.SetDefault()
        buttons_box.AddButton(self.button_ok)

        self.button_cancel = wx.Button(self, wx.ID_CANCEL, "")
        buttons_box.AddButton(self.button_cancel)

        buttons_box.Realize()

        self.right_panel.SetSizer(right_main_sizer)

        self.left_panel.SetSizer(left_main_sizer)

        self.splitter_window.SplitVertically(self.left_panel, self.right_panel, 131)

        self.SetSizer(main_sizer)

        self.SetAffirmativeId(self.button_ok.GetId())
        self.SetEscapeId(self.button_cancel.GetId())

        self.Layout()
        self.Centre()

        self.Bind(wx.EVT_BUTTON, self.create_wrc_file, self.add_wrc_file)
        # end wxGlade

    def create_wrc_file(self, event):  # wxGlade: wxGladeResourcesUI.<event_handler>
        print("Event handler 'create_wrc_file' not implemented!")
        event.Skip()

# end of class wxGladeResourcesUI
